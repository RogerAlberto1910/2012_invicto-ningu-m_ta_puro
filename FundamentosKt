Solutions
Docs
Community
Teach
Play

1.8.0
JVM
Program arguments
Copy link
Share code
Run
}
​
fun main() {
 println("o println serve para exibir textos no console")
}
o println serve para exibir textos no console

Our website uses some cookies and records your IP address for the purposes of accessibility, security, and managing your access to the telecommunication network. You can disable data collection and cookies by changing your browser settings, but it may affect how this website functions. Learn more.

With your consent, JetBrains may also use cookies and your IP address to collect individual statistics and provide you with personalized offers and ads subject to the Privacy Policy and the Terms of Use. JetBrains may use third-party services for this purpose. You can adjust or withdraw your consent at any time by visiting the Opt-Out page.

/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 * 

fun main() {
   //Tipos de variáveis: 
    //
    //String - armazena valores de tipo texto - dentro de ""  ==> ex: "abóbora" 
    //Int - armazena números inteiros ==> 7042
    //Float - armazena números reais (no geral) - necessita de um f no valor ==>72.24f
    //Double - armazena números quebrados(de forma arredondada) ==> 7.15
    //Long - armazena números longos ==> 54564386546546.784486
    //Boolean - verdadeiro ou falso ==> true, false
    /*
    var cr7 = "Cristiano Ronaldo" 
    var numeroChampions = 5 
    var altura = 1.87

    //Concatenação

    print("O nome dele é " + cr7 + ", ele tem " + numeroChampions)
    println(" titúlos de Champions League e ele tem " + altura + " de altura SIIIIUU eu sou u miliorr")

    var laPulga = "Lionel Messi"
    var champions = 4
    var alturaDele = 1.02

    print("O nome dele é $laPulga, ele tem $champions títulos de chamions, ")
    println("e ele tem apenas $alturaDele de altura")
    */
    //Faça uma apresentação de si mesmo, usando no mínimo 
    //5 variáveis e usando o método de concatenação
    /*
    val nome = "Pedro"
    val sobrenome = "Sávio"
    val dia = 13
    val mes = "Março"
    val ano = "2009" 

    println("Olá, meu jovem, meu nome é $nome  $sobrenome e eu nasci no dia $dia de $mes de $ano")
    */

    //Operadores matemáticos
    //
    // + => adição
    // - => subtração
    // / => divisão
    // * => multiplicação
    // % => módulo - o resto de uma divisão

    //println(15 % 2) 
    //
    //Operadores Relacionais 
    //
    //
    // == => igual a...
    // != => diferente de...
    // > => maior que... 
    // < => menor que...
    // >= -> maior ou igual a...
    // <= -> menor ou igual a...
    
    //Desafio Calculadora: fazer um programa que simule uma calculadora
    //Deve ter pelo menos 2 variáveis neste cálculo
    //
    //o primeiro a conseguir... chocolate
    //
    //iremos corrigir
    //
    **/
fun main(){
    var N1=1777
    var N2=54
 
    
    println("@ ***************---------------------*************** @")
    println("**                                                   **")   
    println("**                                                   **")
    println("**                                                   **")
    println("**                                                   **")
    println("**                                                   **")
    println("**               Minha Calculadora                   **")
    println("**                                                   **")
    println("**                                                   **")
    println("** A adição entre 19 e 78                            **")
    println("** O resultado da adição é: 97                       **")
    println("**                                                   **")
    println("** A multiplicação entre 15 e 21                     **")
    println("** O resultado da multiplicação é: 315               **")
    println("**                                                   **")
    println("**                                                   **")
    println("** A  divisão entre $N1 e $ N2                  **")
    println("** O resultado da divisão é: + (n1 / n2)             **")
    println("**                                                   **")
    println("**                                                   **")
    println("**                                                   **")
    println("**...................................................**")
  
  
  
  
  
}
/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */
fun main() {
    //Condições
    //
    //condição silples
    //
    //if--> se
    //else--> senão...
    /*
    var lembrei dochocolate = "Sim"
    
    if(lembrei dochocolate == "Sim"){
        println("Vou entregar chocolate pera todo mundo!!")
    }else{
        println("Chocolate pra todo mundo!!")
    }
    //se a condição for verdadeiro, a sua ação será executada, senão, outra ação
    //executada
    //
    //Exercício ---> Faça uma comparação, usando uma variavel e o if...else, se essa 
    //comparação for verdadeira, um resultado deverá ser impresso, senão, outro(resultado)
    //será impresso
    //
    
    
    
     var sou corinthiano = "Sim"
    
    if(sou Corinthiano == "Sim"){
        println("hoje tem hoje o coringão ganha!!")
    }else{
        println("não tenho amigos!!")
        
        
        
       
       
       //condição compostas
       
       var corações =5
       if(coracoes == 5){
           println("você está ótimo!! Bom pra vc")
       }else if(coracoes == 4){
           println("Ce ta bem")
       }else if (corações == 3){
           println("Ce ta ok, pode cumer miojo")
       }else if(coracoes == 2)
           println("Vc não está muito bem!! se cuida! culpa do miojo")
       }else if(coracoes == 1){
           println("Voce está morrendo, você tem direito a um advogado")
       }else{    
           println("Tu ta morto")
   
   
       }
       */]
      var idade = 
      if(idade <= 3)
        pritln("Vc é um nenê")
     }else if(idade <= 12){
        println("Vc é muito infantil")
     }else if(idade <=18){
        println("Tu é jovem! aproveite a vida")
     }else if(idade <=60){
        println("Tu é adulto!! Pagu a conta")
     }else if(idade > 60){
        println("Que que há velhinho?")
     }else{
        println("Você não existe!!!")
  
            
    
   
    fun main() {
    
    //Operadores Lógicos
    //
    //são usados quando queremos comparar mais de uma coisa na mesma condição
    //
    // && -> e (shift + 7)
    // || -> ou (shift + barra invertida)
    // 
    // TABELA VERDADE (com E e OU)
    // 
    // && - a determinada ação só acontecerá se e somente se todas as
    //  condições forem verdadeiras
    // 
    // VV -> verdadeiro
    // VF -> falso
    // FV -> falso
    // FF -> falso
    // 
    // || - a determinada ação será executada se pelo menos uma das 
    // condições forem verdadeiras
    // 
    // VV -> verdadeiro
    // VF -> verdadeiro
    // FV -> verdadeiro
    // FF -> falso
    // 
    // 
    // Show do Péricles
    /*
    var idade = 13
    var acompanhadoDosPais = false
    
    
    if(idade >= 14 || acompanhadoDosPais == true){
        println("Pode entrar, curte o Péricles ae")
    }else{
        println("a entrada não permitida para você")
    }
    */
    //Exercício - A seleção Brasileira está correndo risco de ser eliminada na fase de grupos 
    //da Copa, o Brasil, só pode se classificar se a Alemanha perder, e se o próprio Brasil
    // ganhar. As partidas já passaram, quero saber se o Brasil se classificou ou não
    // 
    //  detalhe: use os operadores lógicos
    //**********************************************************************************************************
    
    fun main() {
    println("Hello, world!!!")
    //Laços de Repetição
    //
    //while - enquanto
    //for - para
    //do.. while faça.. enquanto
    //repeat - repita
 
    //Laço While 
    //enquanto uma determinada condição for verdadeira, outra determinada
    //ação será executada
    //
    //Estrutura do While
    //
    //while(condição){
    //ação
    //
    //}     
         
     /*
    var idade = 1
    
    while (idade <= 17){
        println("$idade anos? Creça, serio")
        idade++
    }
        println("Divirta-se, você cegou até aqui, você merece")
    
     */
     
     // Laço do.. while
     // 
     // Uma determinada ação sera executada, enquanto outra determinada condição for
     // verdadeira
     // 
     // Estrutura do do.. While
     // 
     // do{
     // ação
     // } while(condição)
     
     /*
     var idade = 1
    do{
        println("$idade anos? Creça, séro")
        idade++
    }while(idade > 17)
    */
    
    
    //Eercício -> Não é ano bissexto, por tanto o ano possui 365, precisa ser exibido no 
    //console os números de 1 a 365, usando no mínimo uma variável, usando os Laços While e
    //do.. while
   
    // Divita-se
     
   var idade = 23
    
    while (idade < 99){
        println("$idade anos? Aproverite vc ainda é novo")
        idade++
    }
        println("Divirta-se, você cegou até aqui, você merece")
  
  
  
  
   var number = 2
    do{
        println(number)
        number++
    }while(number > 97)
  
   //------------------------------------------------------------------------------------------
    fun main() {
    
    //Laços de repetição
    //While ♣
    //Do..While ♠
    //
    // for - para... 
    // 
    // for - para cada item em uma lista/ ou qualquer tipo de coleção, será executado uma
    // determinada ação  
    // 
    // Estrutura do for: 
    // for (item in list/collection/intervalo){
    // ação
    // } 
    // 
    /*
    var lista = mutableListOf<String>("Messi", "Cristiano", "Neymar")
    for(item in lista){
        println(item)
    }
    */
    /*
    for(item in 0..10){
        println(item * 8)
    }
    */
    //Exercício: faça a tabuada de um número de sua escolha (sem a do 0, a do 1, do 2 e do 10)
    //. observação: precisa utilizar o laço for
    //
    // Repeat - Repita...
    //
    // uma determinada ação será repetida um determinado número de vezes
    // 
    var tartaruga = 1
    repeat(10){
        println(tartaruga)
        tartaruga++
    } 
    
    
}

//***************************************************************************************
fun main() {
    
    //Collections - Coleções 
    //
    // <> --> tags - servem para especificar o tipo de valor a ser listado
    //
    // São determinados conjuntos de itens/valores que podem ser modelados e utilizados
    // em determinados métodos e operações 
    // 
    // List - listas
    // 
    // listOf --> listam itens de variados tipos 
    // 
    
    //var genericList = mutableListOf("São Paulo, arroz e pamonha", 25.7f, 23.974, '$', false) 
    //println(genericList)
    var specificList = listOf<String>("Cruzeiro do Roberto Carlos", "Calleri","5")
    println(specificList)
    
    
// Index - uma posição da collection
 
    //Propriedades - list 
    //
    // .lastIndex 
    // .size 
    // 
    // 
    //println(specificList.lastIndex)
    //println(specificList.first())
   //println(genericList.size) 
   //
   //println(specificList.get(0))
   // println(specificList.indexOf("Cruzeiro do Roberto Carlos"))
    
    
    //Métodos - listOf
    /*
    genericList.add(2, "easy")
    println(genericList)
    genericList.remove(23.974)
    println(genericList) 
    genericList.removeAt(3)
    println(genericList)
    genericList.set(0, "tartaruga")
    println(genericList)
    genericList.clear()
    println(genericList)
    */
    var anotherList = setOf("Pedro", "Diniz", "Pelé", "Ronaldinho", "Marília Mendonza", "Diniz")
    println(anotherList) 
    
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
    println(animal)
    
    
    
    
    
}

  
  
     
     
     
     
}    
     
     
     
     
     
     
     
     //.........................................................................
     
fun main(){
    /*
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
    println(animal)
    
    animal.put("capivara incrivel", 5)
    println(animal)
    animal.put("leopardo", 9)
    println(animal)
    animal.replace("tatu",3)
    println(animal)
    */
    
    //POO
    //
    //programação Orientadas a Objetos
    //
    //Objetos - estados (caracteristicas: nome, idade, cpf)
    //
    //comportamentos - (andar, comer, dormir, conversar, programar)
    //
    //classes - Modelos que servem para construção de objetos derivados
    //
    /*
    val pessoa1= Pessoa()
    pessoa1.nome = "Keyla"
    println(pesso1.nome)
    pessoa1,cpf = "787,458.778.78
    println.(pessoa1.cpf)
    
}
   */
    
    /*
 class Pessoa(){
     //declaração de atributos para a classe pessoa
     var nome = ""
     var cpf = ""
     var idade = 99
     var altura = 1,74
     */
     
     
     //Exercício
     //
     
     
     val paciente1 = pessoa()
     paciente1.nome = "Yuri Guedes"
     
     
     
     
     
     
} 
     
     
      class Pessoa(){
     var nome =    
     var alergias = 
         
         
     
     }
     
     
    //********************************************// 
     
     /**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */ 

 /*
fun main() {
    var pessoa1= Pessoa()
    
    println ("Prontuario:" )
    
   pessoa1.nome = "Yuri Guedes"
    println ("nome :"+pessoa1.nome)
   pessoa1.idade = 23
    println ("idade :"+pessoa1.idade)
   pessoa1.alergias = "não"
    println ("alergias :"+pessoa1.alergias)
   pessoa1.medicamento = "não"
    println ("mediacamento :"+pessoa1.medicamento)
   pessoa1.altura = 1.73
    println ("altura :"+pessoa1.altura)
    
}
    
    
class Pessoa(){
     //declaração de atributos para a classe pessoa
     var nome = ""
     var idade=0
     var altura = 0.0
     var alergias ="String"
     var medicamento ="String "   
     var peso =0.0 
     

}
     
     /*
     
     


        
        
        
        
        
        
        
    
     
     
     

     
     

     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    
    
    
    
    
    
    
    
    
    
    
    
